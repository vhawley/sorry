#BlueJ class context
comment0.params=
comment0.target=SorryBoard()
comment0.text=\r\n\ Constructor\ that\ sets\ up\ a\ new\ SorryBoard\r\n
comment1.params=
comment1.target=java.util.ArrayList\ getChoosablePawns()
comment1.text=\r\n\ This\ method\ calculates\ which\ pawns\ are\ selectable\ depending\ on\ the\ card\ chosen\r\n\ and\ adds\ them\ to\ an\ ArrayList\ of\ pawns.\ \ If\ there\ is\ at\ least\ one\ pawn\ in\ the\ ArrayList,\r\n\ it\ tells\ the\ game\ that\ it\ is\ time\ for\ a\ player\ to\ select\ a\ pawn.\r\n\ @return\ ArrayList\ of\ pawns\ that\ a\ current\ player\ can\ choose\ from\ depending\ on\ the\ action\ needed.\r\n
comment10.params=e
comment10.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment11.params=e
comment11.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment11.text=\r\n\ Called\ when\ the\ "draw"\ button\ is\ pressed.\ \r\n\ @param\ pawn\ which\ pawn\ to\ move.\r\n
comment12.params=
comment12.target=Tile[][]\ getGrid()
comment12.text=\r\n\ Get\ the\ 2D\ array\ that\ contains\ this\ board's\ grid.\r\n\ @return\ Tile[][]\ 2D\ Tile\ array\ that\ contains\ the\ grid\r\n
comment13.params=
comment13.target=int\ getCurrentTurn()
comment13.text=\r\n\ Get\ the\ current\ turn\ in\ the\ game.\ \r\n\ @return\ int\ number\ of\ the\ player\ whose\ turn\ it\ is.\r\n
comment14.params=
comment14.target=Pawn\ getSelectedPawn()
comment14.text=\r\n\ Get\ the\ last\ selected\ pawn.\ \r\n\ @return\ Pawn\ the\ pawn\ that\ was\ last\ selected.\r\n
comment15.params=b
comment15.target=void\ setTimeToChooseAgain(boolean)
comment15.text=\r\n\ Set\ whether\ the\ current\ player\ needs\ to\ choose\ another\ pawn.\ \r\n\ @param\ boolean\ whether\ the\ player\ needs\ to\ choose\ another\ pawn.\r\n
comment16.params=
comment16.target=boolean\ getTimeToChooseAgain()
comment16.text=\r\n\ Get\ whether\ the\ current\ player\ needs\ to\ choose\ another\ pawn.\ \r\n\ @return\ boolean\ whether\ the\ player\ needs\ to\ choose\ another\ pawn.\r\n
comment17.params=
comment17.target=int\ getPLAYERYELLOW()
comment17.text=\r\n\ Get\ int\ representation\ of\ PLAYER_YELLOW.\ \r\n\ @return\ int\ represents\ yellow.\r\n
comment18.params=
comment18.target=int\ getPLAYERGREEN()
comment18.text=\r\n\ Get\ int\ representation\ of\ PLAYER_GREEN.\ \r\n\ @return\ int\ represents\ green.\r\n
comment19.params=
comment19.target=int\ getPLAYERRED()
comment19.text=\r\n\ Get\ int\ representation\ of\ PLAYER_RED.\ \r\n\ @return\ int\ represents\ red.\r\n
comment2.params=p\ moveCount
comment2.target=void\ advance(Pawn,\ int)
comment2.text=\r\n\ advance\ with\ integer\ parameter\ moveCount\ moves\ a\ given\ pawn\r\n\ a\ given\ amount\ of\ spaces.\r\n\ @param\ Pawn\ which\ pawn\ to\ move.\r\n\ @param\ int\ how\ many\ spaces\ to\ advance.\r\n
comment20.params=
comment20.target=int\ getPLAYERBLUE()
comment20.text=\r\n\ Get\ int\ representation\ of\ PLAYER_BLUE.\ \r\n\ @return\ int\ represents\ blue.\r\n
comment21.params=g
comment21.target=void\ paint(java.awt.Graphics)
comment21.text=\r\n\ Draws\ the\ graphics\ on\ the\ screen.\ \r\n\ @param\ Graphics\ draws\ the\ given\ graphics\ commands.\r\n
comment3.params=p
comment3.target=void\ advance(Pawn)
comment3.text=\r\n\ advance\ with\ no\ int\ parameter\ moves\ a\ given\ pawn\r\n\ 1\ space.\ \r\n\ @param\ pawn\ which\ pawn\ to\ move.\r\n
comment4.params=g
comment4.target=void\ update(java.awt.Graphics)
comment5.params=
comment5.target=void\ incrementTurn()
comment5.text=\r\n\ incrementTurn\ is\ called\ when\ it\ is\ time\ to\ draw\ a\ card.\r\n
comment6.params=e
comment6.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment6.text=\r\n\ Called\ whenever\ the\ mouse\ is\ clicked,\ but\ only\ does\ something\ when\ a\ pawn\ is\ selected.\ \r\n\ @param\ MouseEvent\ where\ the\ mouse\ is\ clicked.\r\n
comment7.params=e
comment7.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment8.params=e
comment8.target=void\ mouseExited(java.awt.event.MouseEvent)
comment9.params=e
comment9.target=void\ mousePressed(java.awt.event.MouseEvent)
numComments=22
